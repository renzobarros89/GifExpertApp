{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGif","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAwCeA,EArCY,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,mCACI,sBACIC,SAbS,SAAAC,GACjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IAEzBR,GAAe,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACtCN,EAAc,MAMd,SAGI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAtBS,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,e,8BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAWH,GAF9C,+DAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAgBZM,GAhBY,4CAAH,sDCCPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE/B,OACI,sBAAKc,UAAU,wCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAZ,SAACA,GAAc,IAAD,EAEXd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAsBrC,OAfAC,qBAAY,WAERxB,EAAQC,GACHwB,MAAM,SAAAC,GAEHC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,YAK1B,CAACpB,IAEGqB,EDnBiBM,CAAa3B,GAA9BO,EAH4B,EAG5BA,KAAMa,EAHsB,EAGtBA,QAEb,OACI,qCACI,6BAAKpB,IAEHoB,GAAW,WAEb,qBAAKJ,UAAU,YAAf,SAGYT,EAAKE,KAAI,SAAAC,GAAG,OACZ,wBAAC,EAAD,2BACYA,GADZ,IAEQkB,IAAKlB,EAAIC,eES1BkB,EA1BM,WAAO,IAAD,EAEa3C,mBAAS,CAAC,gBAFvB,mBAEhB4C,EAFgB,KAEJ7C,EAFI,KAIvB,OACI,qCACA,8CAEA,cAAC,EAAD,CACIA,cAAeA,IAEnB,uBAEA,6BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCf7B+B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.34553e29.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const inputValueChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length>2){\r\n\r\n            setCategories( cate =>[inputValue, ...cate]);\r\n            setInputValue('');\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <input \r\n                    type='text'\r\n                    value={inputValue}\r\n                    onChange={inputValueChange}\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","\r\nexport const getGifs = async (category) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI (category)}&limit=10&api_key=EtR7wL6prrRfb1wSFu9gLqxWTU4BpgA4`;\r\n\r\n    const resp = await fetch (url);\r\n\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n\r\n    return (       \r\n        <div className=\"card animate__animated animate__pulse\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGif } from '../hooks/useFetchGif';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {data, loading} = useFetchGif (category);\r\n    \r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            { loading && 'Cargando'}\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n                    {\r\n                        data.map(img=>(\r\n                        <GifGridItem\r\n                                {...img}\r\n                                key={img.id}\r\n                            />\r\n                        ))\r\n                    }\r\n                \r\n            </div> \r\n        </>\r\n        \r\n    )\r\n}\r\n","\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGif = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect ( () => {\r\n\r\n        getGifs(category)\r\n            .then (imgs =>{\r\n\r\n                setTimeout(()=>{\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                })\r\n                \r\n            })\r\n    }, [category]) \r\n\r\n    return state;\r\n\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    return ( \r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n\r\n        <AddCategory \r\n            setCategories={setCategories}\r\n        />\r\n        <hr />\r\n\r\n        <ol>\r\n            {\r\n                categories.map( category =>(\r\n                    <GifGrid \r\n                        key={category}\r\n                        category={category} />\r\n                                    ))\r\n            }\r\n        </ol>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}